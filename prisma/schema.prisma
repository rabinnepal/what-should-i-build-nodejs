// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  googleId  String?  @unique
  githubId  String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ideas     Idea[]
  votes     Vote[]
}

model Idea {
  id          String   @id @default(uuid())
  title       String
  description String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
  votes       Vote[]
  embedding   Float[]  // Vector for similarity search
}

model Vote {
  id        String   @id @default(uuid())
  value     Int      // 1 for upvote, -1 for downvote
  createdAt DateTime @default(now())
  userId    String
  ideaId    String
  user      User     @relation(fields: [userId], references: [id])
  idea      Idea     @relation(fields: [ideaId], references: [id])

  @@unique([userId, ideaId]) // Prevent duplicate votes
}

model QuizResponse {
  id        String   @id @default(uuid())
  answers   Json     // Store quiz answers
  filters   Json     // Store selected filters
  createdAt DateTime @default(now())
  userId    String?  // Optional, for logged-in users
} 